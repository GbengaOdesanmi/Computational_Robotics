from utility import *
from dynamics import MyController
from animation import animation

x = np.array([-7.18848314e-03, -1.54556298e-02, -1.50665029e-02, -1.29400914e-02,
          -1.00598006e-02, -6.28930627e-03, -1.31259539e-03, 8.64366677e-04,
          -1.76539489e-04, -1.13199831e-03, -8.76136589e-04, 6.41363202e-04,
          1.92676172e-03, 1.28544347e-03, 2.12191148e-03, 3.43821194e-03,
          1.92733130e-03, 1.81711197e-03, 1.74805355e-03, 2.03109930e-03,
          3.28888620e-03, 2.59976332e-03, 9.63385710e-04, -6.35301783e-04,
          -1.00440533e-04, 3.07086790e-03, 9.72521786e-04, 2.20298615e-04,
          5.81251279e-04, 9.95333939e-04, 6.73063469e-04, 8.42820891e-05,
          -5.23857198e-04, 9.37595405e-04, 2.73327176e-03, 2.45373943e-03,
          1.86279459e-03, 1.25299866e-03, -9.47817302e-04, 4.61045317e-04,
          1.78250700e-03, 3.39778800e-04, -9.41045855e-04, -1.53853855e-03,
          -5.47787827e-04, -1.58547440e-03, -8.41363699e-04, 1.14824992e-03,
          2.52582128e-03, 2.45363053e-03, 6.36543318e-04, 1.45001632e-03,
          1.98875055e-03, 8.53108289e-05, 6.71770561e-04, 8.02913467e-04,
          5.39594990e-04, 3.70504063e-04, -5.69279485e-04, 1.12394946e-03,
          2.07265059e-03, 1.38475229e-03, 1.63327760e-03, -4.17523998e-04,
          3.51467134e-04, 1.78915305e-03, 1.70988415e-04, -9.56374775e-05,
          -1.41609401e-03, -1.96464717e-03, -1.23427699e-03, 9.34652616e-05,
          7.06842031e-04, 5.64121115e-04, 1.10488665e-03, 2.77716252e-03,
          7.36474901e-04, 5.18576478e-04, 1.80612310e-03, 1.55446190e-03,
          2.29976095e-03, -1.41402632e-06, -1.27993036e-05, 2.16962507e-03,
          1.31495365e-03, 1.13007698e-03, 1.80881261e-03, 8.21577058e-04,
          1.53981733e-03, 1.10566562e-03, 6.72195272e-04, 1.25598247e-03,
          -1.12450605e-04, 2.95581586e-04, 1.43086778e-04, -7.65503838e-04,
          -2.30675761e-03, -1.91885407e-03, -2.06270968e-03, -2.50243166e-03,
          1.97333266e-19, -1.08919967e-19, 3.14725896e-01, 1.25299466e-19,
          3.87936416e+01, 1.26291250e+01, 2.87395632e-21, 2.18805113e-18,
          1.01007039e+00, 3.25531638e-01, 3.14006302e-01, 7.36863414e-03,
          3.87929032e+01, 1.23759393e+01, -5.52741166e-02, 5.66006954e-01,
          2.02011765e+00, 6.44480974e-01, 3.11597172e-01, 3.20381276e-02,
          3.87918658e+01, 1.21235186e+01, -1.29778423e-01, 1.32893105e+00,
          3.03013794e+00, 9.56854346e-01, 3.07328094e-01, 7.57534887e-02,
          3.87908305e+01, 1.18708198e+01, -1.98142318e-01, 2.02897733e+00,
          4.04013234e+00, 1.26264125e+00, 3.01438112e-01, 1.36066901e-01,
          3.87898776e+01, 1.16175918e+01, -2.54284889e-01, 2.60387726e+00,
          5.05010434e+00, 1.56182595e+00, 2.94297683e-01, 2.09184893e-01,
          3.87891097e+01, 1.13636857e+01, -2.94192941e-01, 3.01253572e+00,
          6.06006111e+00, 1.85438875e+00, 2.86396130e-01, 2.90096798e-01,
          3.87887082e+01, 1.11089424e+01, -3.12749128e-01, 3.20255107e+00,
          7.07001234e+00, 2.14031036e+00, 2.78238757e-01, 3.73628300e-01,
          3.87886836e+01, 1.08535567e+01, -3.13843251e-01, 3.21375489e+00,
          8.07996382e+00, 2.41958118e+00, 2.70088998e-01, 4.57081835e-01,
          3.87887281e+01, 1.05980751e+01, -3.12164270e-01, 3.19656213e+00,
          9.08991465e+00, 2.69220196e+00, 2.61919513e-01, 5.40737355e-01,
          3.87886329e+01, 1.03427470e+01, -3.15358402e-01, 3.22927003e+00,
          1.00998622e+01, 2.95817524e+00, 2.53644630e-01, 6.25472156e-01,
          3.87884773e+01, 1.00874612e+01, -3.20260244e-01, 3.27946490e+00,
          1.11098075e+01, 3.21749998e+00, 2.45298471e-01, 7.10936822e-01,
          3.87884591e+01, 9.83205218e+00, -3.20833325e-01, 3.28533324e+00,
          1.21197555e+01, 3.47017248e+00, 2.37026463e-01, 7.95642192e-01,
          3.87886842e+01, 9.57648240e+00, -3.14564550e-01, 3.22114099e+00,
          1.31297102e+01, 3.71619042e+00, 2.28938143e-01, 8.78466581e-01,
          3.87889772e+01, 9.32089561e+00, -3.06723580e-01, 3.14084946e+00,
          1.41396730e+01, 3.95555378e+00, 2.21060183e-01, 9.59136895e-01,
          3.87893006e+01, 9.06532415e+00, -2.98406251e-01, 3.05568001e+00,
          1.51496470e+01, 4.18826206e+00, 2.13467195e-01, 1.03688910e+00,
          3.87898439e+01, 8.80969864e+00, -2.84834030e-01, 2.91670047e+00,
          1.61596351e+01, 4.41431507e+00, 2.06221406e-01, 1.11108597e+00,
          3.87903793e+01, 8.55411333e+00, -2.71736778e-01, 2.78258460e+00,
          1.71696351e+01, 4.63371431e+00, 1.99265118e-01, 1.18231836e+00,
          3.87907597e+01, 8.29860212e+00, -2.62596619e-01, 2.68898938e+00,
          1.81796449e+01, 4.84646109e+00, 1.92541118e-01, 1.25117212e+00,
          3.87911263e+01, 8.04311809e+00, -2.53894075e-01, 2.59987533e+00,
          1.91896645e+01, 5.05255604e+00, 1.86050508e-01, 1.31763597e+00,
          3.87915180e+01, 7.78765474e+00, -2.44669190e-01, 2.50541251e+00,
          2.01996964e+01, 5.25199965e+00, 1.79849054e-01, 1.38113885e+00,
          3.87920716e+01, 7.53220921e+00, -2.31683144e-01, 2.37243540e+00,
          2.12097435e+01, 5.44479255e+00, 1.74003793e-01, 1.44099433e+00,
          3.87926847e+01, 7.27679362e+00, -2.17308993e-01, 2.22524409e+00,
          2.22198034e+01, 5.63093532e+00, 1.68458894e-01, 1.49777410e+00,
          3.87930550e+01, 7.02139257e+00, -2.08611372e-01, 2.13618045e+00,
          2.32298686e+01, 5.81042787e+00, 1.63037652e-01, 1.55328762e+00,
          3.87930891e+01, 6.76596981e+00, -2.07810521e-01, 2.12797974e+00,
          2.42399332e+01, 5.98326971e+00, 1.57603455e-01, 1.60893379e+00,
          3.87930135e+01, 6.51053177e+00, -2.09606463e-01, 2.14637018e+00,
          2.52500008e+01, 6.14946172e+00, 1.52240273e-01, 1.66385277e+00,
          3.87933147e+01, 6.25517661e+00, -2.02355671e-01, 2.07212207e+00,
          2.62600775e+01, 6.30900550e+00, 1.47099979e-01, 1.71648938e+00,
          3.87937211e+01, 5.99986138e+00, -1.92485786e-01, 1.97105445e+00,
          2.72701612e+01, 6.46190064e+00, 1.42126083e-01, 1.76742208e+00,
          3.87938394e+01, 5.74447390e+00, -1.89574120e-01, 1.94123899e+00,
          2.82802473e+01, 6.60814608e+00, 1.37215565e-01, 1.81770578e+00,
          3.87939174e+01, 5.48907819e+00, -1.87617543e-01, 1.92120364e+00,
          2.92903365e+01, 6.74774218e+00, 1.32380620e-01, 1.86721562e+00,
          3.87940681e+01, 5.23371791e+00, -1.83769109e-01, 1.88179568e+00,
          3.03004296e+01, 6.88068952e+00, 1.27648796e-01, 1.91566950e+00,
          3.87942246e+01, 4.97836789e+00, -1.79696563e-01, 1.84009281e+00,
          3.13105257e+01, 7.00698776e+00, 1.22994058e-01, 1.96333402e+00,
          3.87942942e+01, 4.72297941e+00, -1.77847888e-01, 1.82116238e+00,
          3.23206222e+01, 7.12663559e+00, 1.18349418e-01, 2.01089513e+00,
          3.87942551e+01, 4.46753012e+00, -1.78920888e-01, 1.83214989e+00,
          3.33307186e+01, 7.23963284e+00, 1.13703956e-01, 2.05846466e+00,
          3.87942906e+01, 4.21212915e+00, -1.77910956e-01, 1.82180819e+00,
          3.43408195e+01, 7.34598276e+00, 1.09188297e-01, 2.10470500e+00,
          3.87946004e+01, 3.95692754e+00, -1.68950396e-01, 1.73005205e+00,
          3.53509300e+01, 7.44568933e+00, 1.04954127e-01, 2.14806291e+00,
          3.87950264e+01, 3.70183423e+00, -1.56288939e-01, 1.60039873e+00,
          3.63610506e+01, 7.53875341e+00, 1.01021965e-01, 2.18832825e+00,
          3.87953704e+01, 3.44669819e+00, -1.45752310e-01, 1.49250366e+00,
          3.73711787e+01, 7.62517352e+00, 9.73259892e-02, 2.22617504e+00,
          3.87956112e+01, 3.19149019e+00, -1.38146681e-01, 1.41462202e+00,
          3.83813103e+01, 7.70494616e+00, 9.37387268e-02, 2.26290861e+00,
          3.87956349e+01, 2.93608590e+00, -1.37401736e-01, 1.40699377e+00,
          3.93914418e+01, 7.77806802e+00, 9.01456938e-02, 2.29970127e+00,
          3.87955991e+01, 2.68062453e+00, -1.38589943e-01, 1.41916101e+00,
          4.04015748e+01, 7.84454110e+00, 8.66084883e-02, 2.33592225e+00,
          3.87957553e+01, 2.42537281e+00, -1.33113448e-01, 1.36308170e+00,
          4.14117117e+01, 7.90436806e+00, 8.32100221e-02, 2.37072254e+00,
          3.87958989e+01, 2.17011539e+00, -1.27932963e-01, 1.31003354e+00,
          4.24218499e+01, 7.95754597e+00, 7.98598914e-02, 2.40502788e+00,
          3.87958604e+01, 1.91464047e+00, -1.29400652e-01, 1.32506267e+00,
          4.34319857e+01, 8.00406997e+00, 7.64118563e-02, 2.44033576e+00,
          3.87957063e+01, 1.65900778e+00, -1.35453300e-01, 1.38704179e+00,
          4.44421178e+01, 8.04393838e+00, 7.28187239e-02, 2.47712944e+00,
          3.87955817e+01, 1.40340431e+00, -1.40546007e-01, 1.43919111e+00,
          4.54522468e+01, 8.07715145e+00, 6.90914999e-02, 2.51529621e+00,
          3.87954615e+01, 1.14779197e+00, -1.45753285e-01, 1.49251364e+00,
          4.64623725e+01, 8.10370870e+00, 6.52193632e-02, 2.55494689e+00,
          3.87953313e+01, 8.92149860e-01, -1.51677179e-01, 1.55317432e+00,
          4.74724966e+01, 8.12361292e+00, 6.12798579e-02, 2.59528742e+00,
          3.87953456e+01, 6.36752977e-01, -1.50928072e-01, 1.54550346e+00,
          4.84826232e+01, 8.13687138e+00, 5.74668610e-02, 2.63433251e+00,
          3.87955172e+01, 3.81669459e-01, -1.41959691e-01, 1.45366723e+00,
          4.94927549e+01, 8.14348984e+00, 5.39288590e-02, 2.67056165e+00,
          3.87957351e+01, 1.26714580e-01, -1.29804885e-01, 1.32920202e+00,
          5.05028911e+01, 8.14346770e+00, 5.06472966e-02, 2.70416485e+00,
          3.87958619e+01, -1.28415103e-01, -1.22261793e-01, 1.25196076e+00,
          5.15130299e+01, 8.13680147e+00, 4.75302425e-02, 2.73608349e+00,
          3.87959405e+01, -3.83638029e-01, -1.17168516e-01, 1.19980560e+00,
          5.25231713e+01, 8.12349169e+00, 4.45887742e-02, 2.76620412e+00,
          3.87960612e+01, -6.38726326e-01, -1.08774511e-01, 1.11385099e+00,
          5.35333152e+01, 8.10353839e+00, 4.18224947e-02, 2.79453082e+00,
          3.87961296e+01, -8.93946903e-01, -1.03711742e-01, 1.06200823e+00,
          5.45434603e+01, 8.07693816e+00, 3.91461843e-02, 2.82193624e+00,
          3.87961521e+01, -1.14929683e+00, -1.01863711e-01, 1.04308440e+00,
          5.55536062e+01, 8.04369026e+00, 3.65407957e-02, 2.84861542e+00,
          3.87961928e+01, -1.40457422e+00, -9.82640183e-02, 1.00622355e+00,
          5.65637531e+01, 8.00379548e+00, 3.40249330e-02, 2.87437786e+00,
          3.87962268e+01, -1.65986408e+00, -9.49869648e-02, 9.72666520e-01,
          5.75739006e+01, 7.95725308e+00, 3.15806545e-02, 2.89940727e+00,
          3.87962477e+01, -1.91519712e+00, -9.27654196e-02, 9.49917896e-01,
          5.85840484e+01, 7.90406105e+00, 2.91589807e-02, 2.92420521e+00,
          3.87962439e+01, -2.17064297e+00, -9.32506289e-02, 9.54886440e-01,
          5.95941963e+01, 7.84421892e+00, 2.67486167e-02, 2.94888734e+00,
          3.87962535e+01, -2.42601148e+00, -9.18966835e-02, 9.41022039e-01,
          6.06043450e+01, 7.77773123e+00, 2.44574619e-02, 2.97234876e+00,
          3.87963047e+01, -2.68110801e+00, -8.40938058e-02, 8.61120571e-01,
          6.16144950e+01, 7.70460188e+00, 2.23777606e-02, 2.99364490e+00,
          3.87963534e+01, -2.93617673e+00, -7.56543102e-02, 7.74700137e-01,
          6.26246461e+01, 7.62483067e+00, 2.05038380e-02, 3.01283387e+00,
          3.87963900e+01, -3.19129003e+00, -6.82873210e-02, 6.99262167e-01,
          6.36347978e+01, 7.53841458e+00, 1.87644582e-02, 3.03064512e+00,
          3.87964032e+01, -3.44658960e+00, -6.53196752e-02, 6.68873474e-01,
          6.46449497e+01, 7.44534947e+00, 1.70616139e-02, 3.04808224e+00,
          3.87964024e+01, -3.70202192e+00, -6.54809195e-02, 6.70524616e-01,
          6.56551018e+01, 7.34563658e+00, 1.54246958e-02, 3.06484429e+00,
          3.87964174e+01, -3.95722497e+00, -6.02556811e-02, 6.17018174e-01,
          6.66652542e+01, 7.23927866e+00, 1.39180933e-02, 3.08027189e+00,
          3.87964289e+01, -4.21244663e+00, -5.54709899e-02, 5.68022937e-01,
          6.76754068e+01, 7.12627292e+00, 1.24761754e-02, 3.09503713e+00,
          3.87964293e+01, -4.46786428e+00, -5.52870588e-02, 5.66139482e-01,
          6.86855593e+01, 7.00661465e+00, 1.09886117e-02, 3.11026979e+00,
          3.87964253e+01, -4.72344716e+00, -5.89771845e-02, 6.03926369e-01,
          6.96957117e+01, 6.88029918e+00, 9.34557315e-03, 3.12709450e+00,
          3.87964210e+01, -4.97922472e+00, -6.72295494e-02, 6.88430585e-01,
          7.07058641e+01, 6.74732420e+00, 7.49344350e-03, 3.14606031e+00,
          3.87964219e+01, -5.23498337e+00, -7.50381002e-02, 7.68390146e-01,
          7.17160165e+01, 6.60769276e+00, 5.50340409e-03, 3.16643831e+00,
          3.87964240e+01, -5.49052765e+00, -7.78228134e-02, 7.96905610e-01,
          7.27261689e+01, 6.46141027e+00, 3.50254400e-03, 3.18692712e+00,
          3.87964205e+01, -5.74586986e+00, -7.58692691e-02, 7.76901315e-01,
          7.37363212e+01, 6.30848002e+00, 1.56750552e-03, 3.20674191e+00,
          3.87964129e+01, -6.00116320e+00, -7.27668572e-02, 7.45132618e-01,
          7.47464732e+01, 6.14890316e+00, -2.74105453e-04, 3.22560001e+00,
          3.87963997e+01, -6.25641536e+00, -6.86928213e-02, 7.03414490e-01,
          7.57566245e+01, 5.98268322e+00, -1.93931284e-03, 3.24265173e+00,
          3.87963623e+01, -6.51143827e+00, -5.92167672e-02, 6.06379696e-01,
          7.67667748e+01, 5.80982268e+00, -3.36949730e-03, 3.25729682e+00,
          3.87963241e+01, -6.76649981e+00, -5.06400035e-02, 5.18553636e-01,
          7.77769245e+01, 5.63031799e+00, -4.64814057e-03, 3.27039013e+00,
          3.87963088e+01, -7.02179550e+00, -4.75764321e-02, 4.87182665e-01,
          7.87870735e+01, 5.44416753e+00, -5.81302516e-03, 3.28231855e+00,
          3.87962773e+01, -7.27698093e+00, -4.19018572e-02, 4.29075018e-01,
          7.97972215e+01, 5.25137413e+00, -6.79724062e-03, 3.29239691e+00,
          3.87962286e+01, -7.53205981e+00, -3.36986934e-02, 3.45074621e-01,
          8.08073681e+01, 5.05193984e+00, -7.55218120e-03, 3.30012751e+00,
          3.87961696e+01, -7.78708825e+00, -2.42905632e-02, 2.48735367e-01,
          8.18175134e+01, 4.84586322e+00, -8.11160309e-03, 3.30585599e+00,
          3.87961332e+01, -8.04227715e+00, -1.86803149e-02, 1.91286424e-01,
          8.28276583e+01, 4.63313907e+00, -8.59843892e-03, 3.31084118e+00,
          3.87961334e+01, -8.29770410e+00, -1.87150095e-02, 1.91641697e-01,
          8.38378027e+01, 4.41376722e+00, -9.01718599e-03, 3.31512915e+00,
          3.87960969e+01, -8.55290794e+00, -1.34502133e-02, 1.37730184e-01,
          8.48479459e+01, 4.18775233e+00, -9.25665839e-03, 3.31758135e+00,
          3.87960371e+01, -8.80797548e+00, -4.94438175e-03, 5.06304692e-02,
          8.58580877e+01, 3.95509479e+00, -9.30769742e-03, 3.31810399e+00,
          3.87959948e+01, -9.06314986e+00, 1.02392042e-03, -1.04849451e-02,
          8.68682283e+01, 3.71579388e+00, -9.18764420e-03, 3.31687465e+00,
          3.87959440e+01, -9.31827350e+00, 8.19772874e-03, -8.39447423e-02,
          8.78783676e+01, 3.46984983e+00, -8.89060831e-03, 3.31383300e+00,
          3.87958990e+01, -9.57342875e+00, 1.46184910e-02, -1.49693348e-01,
          8.88885059e+01, 3.21726188e+00, -8.43494163e-03, 3.30916697e+00,
          3.87958596e+01, -9.82861148e+00, 2.03826377e-02, -2.08718210e-01,
          8.98986431e+01, 2.95803005e+00, -7.82016450e-03, 3.30287165e+00,
          3.87958167e+01, -1.00837648e+01, 2.68402425e-02, -2.74844084e-01,
          9.09087794e+01, 2.69215357e+00, -7.06482069e-03, 3.29513693e+00,
          3.87957890e+01, -1.03390072e+01, 3.11799882e-02, -3.19283079e-01,
          9.19189149e+01, 2.41963149e+00, -6.19170498e-03, 3.28619623e+00,
          3.87957605e+01, -1.05942339e+01, 3.58866562e-02, -3.67479359e-01,
          9.29290499e+01, 2.14046295e+00, -5.22097531e-03, 3.27625596e+00,
          3.87957444e+01, -1.08495414e+01, 3.86780092e-02, -3.96062814e-01,
          9.39391846e+01, 1.85464561e+00, -4.20808646e-03, 3.26588398e+00,
          3.87957421e+01, -1.11049480e+01, 3.91250306e-02, -4.00640314e-01,
          9.49493192e+01, 1.56217854e+00, -3.17543783e-03, 3.25530965e+00,
          3.87957368e+01, -1.13603281e+01, 4.01958170e-02, -4.11605166e-01,
          9.59594539e+01, 1.26306063e+00, -2.14862844e-03, 3.24479513e+00,
          3.87957435e+01, -1.16158180e+01, 3.86765014e-02, -3.96047374e-01,
          9.69695890e+01, 9.57287161e-01, -1.23922993e-03, 3.23548288e+00,
          3.87957742e+01, -1.18715620e+01, 3.11771333e-02, -3.19253845e-01,
          9.79797250e+01, 6.44853260e-01, -5.61745998e-04, 3.22854545e+00,
          3.87958136e+01, -1.21274258e+01, 2.08624456e-02, -2.13631443e-01,
          9.89898620e+01, 3.25757693e-01, -1.45072787e-04, 3.22427872e+00,
          3.87958486e+01, -1.23832645e+01, 1.11434772e-02, -1.14109206e-01,
          1.00000000e+02, 6.61363325e-20, 1.04354407e-20, 3.22279317e+00,
          3.87958875e+01, -1.26391639e+01, 2.43133396e-19, 3.63847668e-13,
          2.60372566e+00])


T = x[-1]
N = 50
u = x[:N]
pos_x = x[np.arange(N, 9*N, 8)]
pos_y = x[np.arange(N+1, 9*N, 8)]
theta_block = x[np.arange(N+2, 9*N, 8)]
theta_tail = x[np.arange(N+3, 9*N, 8)]
vel_x = x[np.arange(N+4, 9*N, 8)]
vel_y = x[np.arange(N+5, 9*N, 8)]
omega_block = x[np.arange(N+6, 9*N, 8)]
omega_tail = x[np.arange(N+7, 9*N, 8)]

goal_state = [100, 0, 0]
block_traj = []
tail_traj = []
for i in range(N):
    block_traj.append((pos_x[i], pos_y[i], theta_block[i]))
    tail_traj.append(theta_tail[i])

animation(block_traj, tail_traj, goal_state)

'''
#optimization plot
fig1, axs1= plt.subplots(4, 2, figsize=(16, 8))
fig1.suptitle("State Trajectories")
t = np.arange(0, T, T/N)
axs1[0][0].plot(t, pos_x)
axs1[0][0].set_ylabel('x(t)')
axs1[1][0].plot(t, pos_y)
axs1[1][0].set_ylabel('y(t)')
axs1[2][0].plot(t, theta_block)
axs1[2][0].set_ylabel('$\\theta_b$')
axs1[3][0].plot(t, theta_tail)
axs1[3][0].set_ylabel('$\\theta_t$')
axs1[0][1].plot(t, vel_x)
axs1[0][1].set_ylabel('$vel_x$')
axs1[1][1].plot(t, vel_y)
axs1[1][1].set_ylabel('$vel_y$')
axs1[2][1].plot(t, omega_block)
axs1[2][1].set_ylabel('$\omega_b(t)$')
axs1[3][1].plot(t, omega_tail)
axs1[3][1].set_ylabel('$\omega_t(t)$')

print(vel_x[0]/np.cos(theta_block[0]))
print(np.rad2deg(theta_block[0]))
print(vel_x[0])

'''
# dynamic plot
object = MyController(u=(vel_x[0]/np.cos(theta_block[0]), theta_block[0]),
                      initial_state=(0, 0, theta_block[0]), input_torque=u, T=T)
block_traj, block_vel, tail_traj, tail_vel = object.dynamics()

print(vel_x[0]/np.cos(theta_block[0]))
print(np.rad2deg(theta_block[0]))

pos_x2=[]
pos_y2=[]
theta_b2=[]
theta_t2=[]
vel_x2=[]
vel_y2=[]
omega_block2=[]
omega_tail2=[]

for i in range(len(block_traj)):
    pos_x2.append(block_traj[i][0])
    pos_y2.append(block_traj[i][1])
    theta_b2.append(block_traj[i][2])
    theta_t2.append(tail_traj[i])

    vel_x2.append(block_vel[i][0])
    vel_y2.append(block_vel[i][1])
    omega_block2.append(block_vel[i][2])
    omega_tail2.append(tail_vel[i])

'''
# for dynamic
pos_x=[]
pos_y=[]
theta_b=[]
theta_t=[]
vel_x=[]
vel_y=[]
omega_block=[]
omega_tail=[]

for i in range(len(block_traj)):
    pos_x.append(block_traj[i][0])
    pos_y.append(block_traj[i][1])
    theta_b.append(block_traj[i][2])
    theta_t.append(tail_traj[i])

    vel_x.append(block_vel[i][0])
    vel_y.append(block_vel[i][1])
    omega_block.append(block_vel[i][2])
    omega_tail.append(tail_vel[i])
'''
''''
#dynamic plot
fig2, axs2 = plt.subplots(4, 2, figsize=(16, 8))
fig2.suptitle("State Trajectories")
t = np.arange(0, T, T/N)
axs2[0][0].plot(t, pos_x)
axs2[0][0].set_ylabel('x(t)')
axs2[1][0].plot(t, pos_y)
axs2[1][0].set_ylabel('y(t)')
axs2[2][0].plot(t, theta_b)
axs2[2][0].set_ylabel('$\\theta_b$')
axs2[3][0].plot(t, theta_t)
axs2[3][0].set_ylabel('$\\theta_t$')
axs2[0][1].plot(t, vel_x)
axs2[0][1].set_ylabel('$vel_x$')
axs2[1][1].plot(t, vel_y)
axs2[1][1].set_ylabel('$vel_y$')
axs2[2][1].plot(t, omega_block)
axs2[2][1].set_ylabel('$\omega_b(t)$')
axs2[3][1].plot(t, omega_tail)
axs2[3][1].set_ylabel('$\omega_t(t)$')

#torque plot
fig3 = plt.figure("Input Trajectory")
plt.plot(t, u)
plt.ylabel("torque")
plt.xlabel('Time (s)')
plt.show()

'''
#comparison plot
fig, axs= plt.subplots(4, 2, figsize=(16, 8))
fig.suptitle("Comparison of State Trajectories", fontsize=20)
t = np.arange(0, T, T/N)
axs[0][0].plot(t, pos_x,'r',label='optimization')
axs[0][0].plot(t,pos_x2,'b',label='dynamics')
axs[0][0].legend(loc='upper left')
axs[0][0].set_ylabel('x(t)')
axs[1][0].plot(t, pos_y,'r',t, pos_y2,'b')
axs[1][0].set_ylabel('y(t)')
axs[2][0].plot(t, theta_block,'r',t, theta_b2,'b')
axs[2][0].set_ylabel('$\\theta_b$')
axs[2][0].set_ylim((-1, 1))
axs[3][0].plot(t, theta_tail,'r',t, theta_t2,'b')
axs[3][0].set_ylabel('$\\theta_t$')
axs[3][0].set_ylim((-10, 10))
axs[0][1].plot(t, vel_x,'r',t, vel_x2,'b')
axs[0][1].set_ylabel('$vel_x$')
axs[0][1].set_ylim((20, 60))
axs[1][1].plot(t, vel_y,'r',t, vel_y2,'b')
axs[1][1].set_ylabel('$vel_y$')
axs[1][1].set_ylim((-10, 30))
axs[2][1].plot(t, omega_block,'r',t, omega_block2,'b')
axs[2][1].set_ylabel('$\omega_b(t)$')
axs[2][1].set_ylim((-10, 10))
axs[3][1].plot(t, omega_tail,'r',t, omega_tail2,'b')
axs[3][1].set_ylabel('$\omega_t(t)$')
axs[3][1].set_ylim((-10, 10))
plt.show()



err_pos_x = pos_x - pos_x2
err_pos_y = pos_y - pos_y2
err_theta_block = theta_block - theta_b2
err_theta_tail = theta_tail - theta_t2
err_vel_x = vel_x - vel_x2
err_vel_y = vel_y - vel_y2
err_omega_block = omega_block - omega_block2
err_omega_tail = omega_tail - omega_tail2

fig4, axs4 = plt.subplots(4, 2, figsize=(16, 8))
fig4.suptitle("Error of State Trajectories", fontsize=20)
t = np.arange(0, T, T/N)
axs4[0][0].plot(t, err_pos_x)
axs4[0][0].set_ylabel('x(t)')
axs4[0][0].set_ylim((-1,1))
axs4[1][0].plot(t, err_pos_y)
axs4[1][0].set_ylabel('y(t)')
axs4[1][0].set_ylim((-1,1))
axs4[2][0].plot(t, err_theta_block)
axs4[2][0].set_ylabel('$\\theta_b$')
axs4[2][0].set_ylim((-1,1))
axs4[3][0].plot(t, err_theta_tail)
axs4[3][0].set_ylabel('$\\theta_t$')
axs4[3][0].set_ylim((-1,1))
axs4[0][1].plot(t, err_vel_x)
axs4[0][1].set_ylabel('$vel_x$')
axs4[0][1].set_ylim((-1, 1))
axs4[1][1].plot(t, err_vel_y)
axs4[1][1].set_ylabel('$vel_y$')
axs4[1][1].set_ylim((-1,1))
axs4[2][1].plot(t, err_omega_block)
axs4[2][1].set_ylabel('$\omega_b(t)$')
axs4[2][1].set_ylim((-1,1))
axs4[3][1].plot(t, err_omega_tail)
axs4[3][1].set_ylabel('$\omega_t(t)$')
axs4[3][1].set_ylim((-1,1))
plt.show()


t = np.arange(0, T, T/N)
fig5 = plt.figure("Input Trajectory")
plt.plot(t, u)
plt.ylabel("torque")
plt.xlabel('Time (s)')
plt.ylim((-0.127, 0.127))
plt.show()